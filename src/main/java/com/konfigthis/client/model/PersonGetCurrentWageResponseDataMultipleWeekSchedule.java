/*
 * Officient API
 * Officient offers an intuitive HRIS which helps manage all personnel administration through our HR platform & personalized employee self-services. Manage payroll, company assets, contracts, days off, fleet, performance reviews and all employee data in one HR system. HR deserves great software and we're here to provide it.  We support our customers in transforming HR towards paperless administration and automating tedious workforce management tasks in the process. Our goal? Transform HR from an administrative, processing role, to a controlling role which fuels HR strategy across the organization.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PersonGetCurrentWageResponseDataMultipleWeekScheduleWeeksInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PersonGetCurrentWageResponseDataMultipleWeekSchedule
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PersonGetCurrentWageResponseDataMultipleWeekSchedule {
  public static final String SERIALIZED_NAME_SCHEDULE_START_DATE = "schedule_start_date";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_START_DATE)
  private String scheduleStartDate;

  public static final String SERIALIZED_NAME_WEEKS = "weeks";
  @SerializedName(SERIALIZED_NAME_WEEKS)
  private List<PersonGetCurrentWageResponseDataMultipleWeekScheduleWeeksInner> weeks = null;

  public PersonGetCurrentWageResponseDataMultipleWeekSchedule() {
  }

  public PersonGetCurrentWageResponseDataMultipleWeekSchedule scheduleStartDate(String scheduleStartDate) {
    
    
    
    
    this.scheduleStartDate = scheduleStartDate;
    return this;
  }

   /**
   * Get scheduleStartDate
   * @return scheduleStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-01-15", value = "")

  public String getScheduleStartDate() {
    return scheduleStartDate;
  }


  public void setScheduleStartDate(String scheduleStartDate) {
    
    
    
    this.scheduleStartDate = scheduleStartDate;
  }


  public PersonGetCurrentWageResponseDataMultipleWeekSchedule weeks(List<PersonGetCurrentWageResponseDataMultipleWeekScheduleWeeksInner> weeks) {
    
    
    
    
    this.weeks = weeks;
    return this;
  }

  public PersonGetCurrentWageResponseDataMultipleWeekSchedule addWeeksItem(PersonGetCurrentWageResponseDataMultipleWeekScheduleWeeksInner weeksItem) {
    if (this.weeks == null) {
      this.weeks = new ArrayList<>();
    }
    this.weeks.add(weeksItem);
    return this;
  }

   /**
   * Get weeks
   * @return weeks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PersonGetCurrentWageResponseDataMultipleWeekScheduleWeeksInner> getWeeks() {
    return weeks;
  }


  public void setWeeks(List<PersonGetCurrentWageResponseDataMultipleWeekScheduleWeeksInner> weeks) {
    
    
    
    this.weeks = weeks;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PersonGetCurrentWageResponseDataMultipleWeekSchedule instance itself
   */
  public PersonGetCurrentWageResponseDataMultipleWeekSchedule putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonGetCurrentWageResponseDataMultipleWeekSchedule personGetCurrentWageResponseDataMultipleWeekSchedule = (PersonGetCurrentWageResponseDataMultipleWeekSchedule) o;
    return Objects.equals(this.scheduleStartDate, personGetCurrentWageResponseDataMultipleWeekSchedule.scheduleStartDate) &&
        Objects.equals(this.weeks, personGetCurrentWageResponseDataMultipleWeekSchedule.weeks)&&
        Objects.equals(this.additionalProperties, personGetCurrentWageResponseDataMultipleWeekSchedule.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduleStartDate, weeks, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonGetCurrentWageResponseDataMultipleWeekSchedule {\n");
    sb.append("    scheduleStartDate: ").append(toIndentedString(scheduleStartDate)).append("\n");
    sb.append("    weeks: ").append(toIndentedString(weeks)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("schedule_start_date");
    openapiFields.add("weeks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PersonGetCurrentWageResponseDataMultipleWeekSchedule
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PersonGetCurrentWageResponseDataMultipleWeekSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PersonGetCurrentWageResponseDataMultipleWeekSchedule is not found in the empty JSON string", PersonGetCurrentWageResponseDataMultipleWeekSchedule.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("schedule_start_date") != null && !jsonObj.get("schedule_start_date").isJsonNull()) && !jsonObj.get("schedule_start_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_start_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_start_date").toString()));
      }
      if (jsonObj.get("weeks") != null && !jsonObj.get("weeks").isJsonNull()) {
        JsonArray jsonArrayweeks = jsonObj.getAsJsonArray("weeks");
        if (jsonArrayweeks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("weeks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `weeks` to be an array in the JSON string but got `%s`", jsonObj.get("weeks").toString()));
          }

          // validate the optional field `weeks` (array)
          for (int i = 0; i < jsonArrayweeks.size(); i++) {
            PersonGetCurrentWageResponseDataMultipleWeekScheduleWeeksInner.validateJsonObject(jsonArrayweeks.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PersonGetCurrentWageResponseDataMultipleWeekSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PersonGetCurrentWageResponseDataMultipleWeekSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PersonGetCurrentWageResponseDataMultipleWeekSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PersonGetCurrentWageResponseDataMultipleWeekSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<PersonGetCurrentWageResponseDataMultipleWeekSchedule>() {
           @Override
           public void write(JsonWriter out, PersonGetCurrentWageResponseDataMultipleWeekSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PersonGetCurrentWageResponseDataMultipleWeekSchedule read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PersonGetCurrentWageResponseDataMultipleWeekSchedule instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PersonGetCurrentWageResponseDataMultipleWeekSchedule given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PersonGetCurrentWageResponseDataMultipleWeekSchedule
  * @throws IOException if the JSON string is invalid with respect to PersonGetCurrentWageResponseDataMultipleWeekSchedule
  */
  public static PersonGetCurrentWageResponseDataMultipleWeekSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PersonGetCurrentWageResponseDataMultipleWeekSchedule.class);
  }

 /**
  * Convert an instance of PersonGetCurrentWageResponseDataMultipleWeekSchedule to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

