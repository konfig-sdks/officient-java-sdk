/*
 * Officient API
 * Officient offers an intuitive HRIS which helps manage all personnel administration through our HR platform & personalized employee self-services. Manage payroll, company assets, contracts, days off, fleet, performance reviews and all employee data in one HR system. HR deserves great software and we're here to provide it.  We support our customers in transforming HR towards paperless administration and automating tedious workforce management tasks in the process. Our goal? Transform HR from an administrative, processing role, to a controlling role which fuels HR strategy across the organization.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PersonGetOneOffWageComponentsByMonthResponseComponentsInnerParts;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PersonGetOneOffWageComponentsByMonthResponseComponentsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PersonGetOneOffWageComponentsByMonthResponseComponentsInner {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id = 0;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_INPUT_TYPE = "input_type";
  @SerializedName(SERIALIZED_NAME_INPUT_TYPE)
  private String inputType;

  public static final String SERIALIZED_NAME_TYPE_ID = "type_id";
  @SerializedName(SERIALIZED_NAME_TYPE_ID)
  private Integer typeId = 0;

  public static final String SERIALIZED_NAME_ESTIMATE_TOTAL = "estimate_total";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_TOTAL)
  private Integer estimateTotal = 0;

  public static final String SERIALIZED_NAME_PARTS = "parts";
  @SerializedName(SERIALIZED_NAME_PARTS)
  private PersonGetOneOffWageComponentsByMonthResponseComponentsInnerParts parts;

  public static final String SERIALIZED_NAME_CUSTOM_PAYROLL_DATA = "custom_payroll_data";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PAYROLL_DATA)
  private Object customPayrollData = null;

  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner() {
  }

  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Onkosten buitenland / dag", value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13", value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner code(String code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5071", value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    
    
    
    this.code = code;
  }


  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner inputType(String inputType) {
    
    
    
    
    this.inputType = inputType;
    return this;
  }

   /**
   * Get inputType
   * @return inputType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "unity_and_days", value = "")

  public String getInputType() {
    return inputType;
  }


  public void setInputType(String inputType) {
    
    
    
    this.inputType = inputType;
  }


  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner typeId(Integer typeId) {
    
    
    
    
    this.typeId = typeId;
    return this;
  }

   /**
   * Get typeId
   * @return typeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "54", value = "")

  public Integer getTypeId() {
    return typeId;
  }


  public void setTypeId(Integer typeId) {
    
    
    
    this.typeId = typeId;
  }


  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner estimateTotal(Integer estimateTotal) {
    
    
    
    
    this.estimateTotal = estimateTotal;
    return this;
  }

   /**
   * Get estimateTotal
   * @return estimateTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "60", value = "")

  public Integer getEstimateTotal() {
    return estimateTotal;
  }


  public void setEstimateTotal(Integer estimateTotal) {
    
    
    
    this.estimateTotal = estimateTotal;
  }


  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner parts(PersonGetOneOffWageComponentsByMonthResponseComponentsInnerParts parts) {
    
    
    
    
    this.parts = parts;
    return this;
  }

   /**
   * Get parts
   * @return parts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PersonGetOneOffWageComponentsByMonthResponseComponentsInnerParts getParts() {
    return parts;
  }


  public void setParts(PersonGetOneOffWageComponentsByMonthResponseComponentsInnerParts parts) {
    
    
    
    this.parts = parts;
  }


  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner customPayrollData(Object customPayrollData) {
    
    
    
    
    this.customPayrollData = customPayrollData;
    return this;
  }

   /**
   * Get customPayrollData
   * @return customPayrollData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCustomPayrollData() {
    return customPayrollData;
  }


  public void setCustomPayrollData(Object customPayrollData) {
    
    
    
    this.customPayrollData = customPayrollData;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PersonGetOneOffWageComponentsByMonthResponseComponentsInner instance itself
   */
  public PersonGetOneOffWageComponentsByMonthResponseComponentsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonGetOneOffWageComponentsByMonthResponseComponentsInner personGetOneOffWageComponentsByMonthResponseComponentsInner = (PersonGetOneOffWageComponentsByMonthResponseComponentsInner) o;
    return Objects.equals(this.description, personGetOneOffWageComponentsByMonthResponseComponentsInner.description) &&
        Objects.equals(this.id, personGetOneOffWageComponentsByMonthResponseComponentsInner.id) &&
        Objects.equals(this.code, personGetOneOffWageComponentsByMonthResponseComponentsInner.code) &&
        Objects.equals(this.inputType, personGetOneOffWageComponentsByMonthResponseComponentsInner.inputType) &&
        Objects.equals(this.typeId, personGetOneOffWageComponentsByMonthResponseComponentsInner.typeId) &&
        Objects.equals(this.estimateTotal, personGetOneOffWageComponentsByMonthResponseComponentsInner.estimateTotal) &&
        Objects.equals(this.parts, personGetOneOffWageComponentsByMonthResponseComponentsInner.parts) &&
        Objects.equals(this.customPayrollData, personGetOneOffWageComponentsByMonthResponseComponentsInner.customPayrollData)&&
        Objects.equals(this.additionalProperties, personGetOneOffWageComponentsByMonthResponseComponentsInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, code, inputType, typeId, estimateTotal, parts, customPayrollData, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonGetOneOffWageComponentsByMonthResponseComponentsInner {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    inputType: ").append(toIndentedString(inputType)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    estimateTotal: ").append(toIndentedString(estimateTotal)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("    customPayrollData: ").append(toIndentedString(customPayrollData)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("code");
    openapiFields.add("input_type");
    openapiFields.add("type_id");
    openapiFields.add("estimate_total");
    openapiFields.add("parts");
    openapiFields.add("custom_payroll_data");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PersonGetOneOffWageComponentsByMonthResponseComponentsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PersonGetOneOffWageComponentsByMonthResponseComponentsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PersonGetOneOffWageComponentsByMonthResponseComponentsInner is not found in the empty JSON string", PersonGetOneOffWageComponentsByMonthResponseComponentsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("input_type") != null && !jsonObj.get("input_type").isJsonNull()) && !jsonObj.get("input_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input_type").toString()));
      }
      // validate the optional field `parts`
      if (jsonObj.get("parts") != null && !jsonObj.get("parts").isJsonNull()) {
        PersonGetOneOffWageComponentsByMonthResponseComponentsInnerParts.validateJsonObject(jsonObj.getAsJsonObject("parts"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PersonGetOneOffWageComponentsByMonthResponseComponentsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PersonGetOneOffWageComponentsByMonthResponseComponentsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PersonGetOneOffWageComponentsByMonthResponseComponentsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PersonGetOneOffWageComponentsByMonthResponseComponentsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PersonGetOneOffWageComponentsByMonthResponseComponentsInner>() {
           @Override
           public void write(JsonWriter out, PersonGetOneOffWageComponentsByMonthResponseComponentsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PersonGetOneOffWageComponentsByMonthResponseComponentsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PersonGetOneOffWageComponentsByMonthResponseComponentsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PersonGetOneOffWageComponentsByMonthResponseComponentsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PersonGetOneOffWageComponentsByMonthResponseComponentsInner
  * @throws IOException if the JSON string is invalid with respect to PersonGetOneOffWageComponentsByMonthResponseComponentsInner
  */
  public static PersonGetOneOffWageComponentsByMonthResponseComponentsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PersonGetOneOffWageComponentsByMonthResponseComponentsInner.class);
  }

 /**
  * Convert an instance of PersonGetOneOffWageComponentsByMonthResponseComponentsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

